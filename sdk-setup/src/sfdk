#!/bin/bash
#
# Copyright (C) 2022 Jolla Ltd.
# Contact: http://jolla.com/
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# - Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# - Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in
#   the documentation and/or other materials provided with the
#   distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

usage()
{
    cat <<EOF
This is not a real sfdk.

usage:
    sfdk engine exec [<command> [<args>...]]

This command mimics sfdk, the host-side CLI frontend to the Sailfish SDK.
It can be used to add host-side compatibility to scripts that were originally
implemented for use under the SDK.

Allow to execute your script equally from withing the SDK and the host simply
by using a shebang line like this:

    #!/usr/bin/env -S sfdk engine exec /bin/bash
    
Ensure that sfdk is available on PATH on host side:

    ln -s ~/SailfishOS/bin/sfdk ~/bin
    export PATH=\$HOME/bin:\$PATH

EOF
}

[[ $1 == --help ]] && { usage; exit; }
[[ $1 == engine && $2 == exec ]] || { usage >&2; exit 1; }
shift 2
[[ $1 ]] || set -- bash
exec "$@"
